##### Logistic Regression #####
### Import Necessary Packages ###
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn import metrics
import matplotlib.pyplot as plt
import seaborn as sns


### Load Data ###
url = "https://raw.githubusercontent.com/Statology/Python-Guides/main/default.csv"
data = pd.read_csv(url)


### EDA ###
# Display the first few rows of the dataset
print("First few rows of the dataset:")
print(data.head())
print("")

# Check the dimensions of the dataset
print("Dimensions of the dataset:")
print(data.shape)
print("")

# Check for missing values
print("Missing values:")
print(data.isnull().sum())
print("")

# Summary statistics
print("Summary statistics:")
print(data.describe())
print("")

# Visualizations
# Histograms for numerical variables
data.hist(figsize=(10, 8))
plt.show()

# Box plots to check for outliers
data.boxplot(figsize=(10, 6))
plt.show()

# Count plot for categorical variable 'default'
plt.figure(figsize=(6, 4))
sns.countplot(x='default', data=data)
plt.title('Count of Default')
plt.show()

# Pairplot for numerical variables
sns.pairplot(data)
plt.show()


### Split Data into Train/Test ###
X = data[['student', 'balance', 'income']]
y = data['default']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)


### Fit Model ###
model = LogisticRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)


### Model Diagnostics ###
conf_matrix = metrics.confusion_matrix(y_test, y_pred)
print(conf_matrix)
print("Accuracy:", metrics.accuracy_score(y_test, y_pred))
print('')

y_pred_proba = model.predict_proba(X_test)[::, 1]
fpr, tpr, _ = metrics.roc_curve(y_test, y_pred_proba)
auc = metrics.roc_auc_score(y_test, y_pred_proba)

plt.plot(fpr, tpr, label = "AUC:" + str(auc))
plt.legend(loc = 4)
plt.show()
